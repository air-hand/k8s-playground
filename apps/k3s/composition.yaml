apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: k3sclusters.infrastructure.example.org
spec:
  group: infrastructure.example.org
  names:
    kind: K3sCluster
    plural: k3sclusters
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                masterNodeHost:
                  type: string
                masterNodeUser:
                  type: string
                workerNodeHost:
                  type: string
                workerNodeUser:
                  type: string
              required:
                - masterNodeHost
                - masterNodeUser
                - workerNodeHost
                - workerNodeUser
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: k3s-clusters.infrastructure.example.org
spec:
  compositeTypeRef:
    apiVersion: infrastructure.example.org/v1alpha1
    kind: K3sCluster
  resources:
    - name: master-node-setup
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: k3s-master-setup
                namespace: crossplane-system
              spec:
                backoffLimit: 0
                template:
                  spec:
                    restartPolicy: Never
                    containers:
                    - name: ssh-client
                      image: alpine/ssh-client
                      command: 
                        - /bin/sh
                        - -c
                        - |
                          set -e
                          echo "Installing k3s on master node..."
                          
                          # Copy SSH key to proper location
                          mkdir -p /root/.ssh
                          cp /etc/ssh-key/ssh_private_key /root/.ssh/id_rsa
                          chmod 600 /root/.ssh/id_rsa
                          
                          # Install k3s server
                          LATEST_VERSION=$(curl -s https://api.github.com/repos/k3s-io/k3s/releases/latest | grep tag_name | cut -d '"' -f 4)
                          ssh -o StrictHostKeyChecking=no ${masterNodeUser}@${masterNodeHost} "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${LATEST_VERSION} sh -s - server --disable traefik"
                          
                          # Get node token
                          echo "Retrieving node token..."
                          TOKEN=$(ssh -o StrictHostKeyChecking=no ${masterNodeUser}@${masterNodeHost} "sudo cat /var/lib/rancher/k3s/server/node-token")
                          
                          # Store token in a temporary secret
                          cat <<EOF | kubectl apply -f -
                          apiVersion: v1
                          kind: Secret
                          metadata:
                            name: k3s-node-token
                            namespace: crossplane-system
                          type: Opaque
                          data:
                            token: $(echo -n "$TOKEN" | base64)
                          EOF
                      volumeMounts:
                        - name: ssh-key
                          mountPath: /etc/ssh-key
                          readOnly: true
                    volumes:
                      - name: ssh-key
                        secret:
                          secretName: raspberry-ssh-key
    - name: worker-node-setup
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: k3s-worker
                namespace: crossplane-system
              spec:
                backoffLimit: 0
                template:
                  spec:
                    restartPolicy: Never
                    containers:
                    - name: ssh-client
                      image: alpine/ssh-client
                      command:
                        - /bin/sh
                        - -c
                        - |
                          set -e
                          echo "Installing k3s on worker node..."
                          
                          # Copy SSH key to proper location
                          mkdir -p /root/.ssh
                          cp /etc/ssh-key/ssh_private_key /root/.ssh/id_rsa
                          chmod 600 /root/.ssh/id_rsa
                          
                          # Get token from secret
                          TOKEN=$(kubectl get secret k3s-node-token -n crossplane-system -o jsonpath='{.data.token}' | base64 -d)
                          LATEST_VERSION=$(curl -s https://api.github.com/repos/k3s-io/k3s/releases/latest | grep tag_name | cut -d '"' -f 4)
                          
                          # Install k3s agent
                          ssh -o StrictHostKeyChecking=no ${workerNodeUser}@${workerNodeHost} \
                            "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${LATEST_VERSION} K3S_URL=https://${masterNodeHost}:6443 K3S_TOKEN=$TOKEN sh -"
                          
                          # Clean up the token secret
                          kubectl delete secret k3s-node-token -n crossplane-system
                      volumeMounts:
                        - name: ssh-key
                          mountPath: /etc/ssh-key
                          readOnly: true
                    volumes:
                      - name: ssh-key
                        secret:
                          secretName: raspberry-ssh-key
